"""add foreign key to Review

Revision ID: 4fbe6b8dbcfb
Revises: ec44e795e7c0
Create Date: 2024-04-10 13:16:25.886189

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4fbe6b8dbcfb'
down_revision = 'ec44e795e7c0'
branch_labels = None
depends_on = None


def upgrade():
    op.add_column('reviews', sa.Column('employee_id', sa.Integer(), nullable=True))

    # ### commands auto generated by Alembic - please adjust! ###
    if op.get_context().dialect.name == 'sqlite':
        # SQLite doesn't support ALTER of constraints directly, so we use batch mode
        with op.batch_alter_table('reviews') as batch_op:
            batch_op.create_foreign_key(op.f('fk_reviews_employee_id_employees'), 'employees', ['employee_id'], ['id'])
    else:
        op.create_foreign_key(op.f('fk_reviews_employee_id_employees'), 'reviews', 'employees', ['employee_id'], ['id'])
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if op.get_context().dialect.name == 'sqlite':
        with op.batch_alter_table('reviews') as batch_op:
            batch_op.drop_constraint(op.f('fk_reviews_employee_id_employees'), type_='foreignkey')
            batch_op.drop_column('employee_id')
    else:
        op.drop_constraint(op.f('fk_reviews_employee_id_employees'), 'reviews', type_='foreignkey')
        op.drop_column('reviews', 'employee_id')
    # ### end Alembic commands ###